import torch


def create_toy_dataset():
    """
    N = 15 correspondences, without noise added; b = 1

    A : b x 3 x N
    B : b x 3 x N
    F_true : b x 3 x 3
    gt_mask : b x N
    """
    A = torch.tensor(
        [
            [
                [-915.685, 834.329, 1.0],
                [646.367, 254.628, 1.0],
                [-22.876, 595.962, 1.0],
                [578.168, 443.949, 1.0],
                [192.419, 282.905, 1.0],
                [52.794, 306.947, 1.0],
                [736.152, 258.855, 1.0],
                [779.226, 153.273, 1.0],
                [-203.857, 206.508, 1.0],
                [-177.886, -223.585, 1.0],
                [514.813, 356.933, 1.0],
                [-673.211, -458.384, 1.0],
                [303.542, -685.049, 1.0],
                [-5.934, 357.504, 1.0],
                [1086.569, -558.349, 1.0],
            ]
        ]
    ).permute(0,2,1)
    B = torch.tensor(
        [
            [
                [-248.194, -100.591, 1.0],
                [1976.495, 1481.327, 1.0],
                [1127.706, 927.001, 1.0],
                [1470.325, 1127.142, 1.0],
                [1330.03, 1018.398, 1.0],
                [1386.336, 583.886, 1.0],
                [1949.827, 1584.303, 1.0],
                [2428.351, 1934.385, 1.0],
                [1330.216, 663.379, 1.0],
                [2618.936, 603.683, 1.0],
                [1640.894, 1124.457, 1.0],
                [1970.587, 582.818, 1.0],
                [2299.292, 1607.329, 1.0],
                [1272.829, 479.930, 1.0],
                [2306.285, 2028.933, 1.0],
            ]
        ]
    ).permute(0,2,1)
    F_true = torch.tensor(
        [
            [
                [-1.11028e-06, 8.61480e-07, 3.03012e-04],
                [4.66710e-07, -1.33660e-06, 5.36742e-04],
                [7.91556e-04, 5.36159e-04, -9.99999e-01],
            ]
        ],
        dtype=torch.float64,
    )
    gt_mask = torch.tensor(
        [[0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]]
    )

    return A, B, F_true, gt_mask


def get_dataset():
    return create_toy_dataset()
